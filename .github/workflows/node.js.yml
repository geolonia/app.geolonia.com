name: Node.js CI

on:
  push:
    branches:
      - master
      - develop
    tags:
      - '*'
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache the built for react-scripts
        uses: actions/cache@v3
        with:
          path: ./build
          key: build-assets-${{ github.sha }}
          restore-keys: |
            build-assets-${{ github.event.pull_request.base.sha }}

      - run: yarn
      - run: yarn run validate:jed
      - run: yarn test
        env:
         REACT_APP_COGNITO_USERPOOL_ID: us-east-1_000000000
         REACT_APP_COGNITO_APP_CLIENT_ID: 0000000000000aaaaaaaaaaaaa

      - run: "mkdir -p build && cp -r build build_prev"
      - run: yarn build

      - id: compare_bundle_size
        # Escape trancated multiline string
        # https://github.community/t/set-output-truncates-multiline-strings/16852
        run: |
          REPORT=$(node bin/compare.js)
          REPORT="${REPORT//'%'/'%25'}"
          REPORT="${REPORT//$'\n'/'%0A'}"
          REPORT="${REPORT//$'\r'/'%0D'}"
          echo "report=${REPORT}" >> $GITHUB_OUTPUT

      - name: Post comment
        uses: actions/github-script@v4
        if: |
          github.event_name == 'pull_request' &&
          contains(github.actor, 'dependabot')
        env:
          POSTING_COMMENT_BODY: ${{ steps.compare_bundle_size.outputs.report }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: process.env.POSTING_COMMENT_BODY });
